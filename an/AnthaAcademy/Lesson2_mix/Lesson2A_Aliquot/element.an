// example protocol Lessonshowing The MixTo command which allows a specifc plate type to be specified. i.e. platetype pcrplate_skirted
protocol Lesson2A_Aliquot

import (
	"github.com/antha-lang/antha/antha/anthalib/mixer"
)

// Input parameters for this protocol (data)
Parameters {
	VolumePerAliquot Volume
	NumberofAliquots int
}

// Data which is returned from this protocol, and data types
Data{}

// Physical Inputs to this protocol with types
Inputs {
	Solution *Liquid
	OutPlate *Plate
}

// Physical outputs from this protocol with types
Outputs {
	Aliquots []*Liquid
}

Requirements {

}

// Conditions to run on startup
Setup {

}

// The core process for this protocol, with the steps to be performed
// for every input
Steps {

	var aliquots []*Liquid

	for i := 0; i < NumberofAliquots; i++ {

		aliquotSample := mixer.Sample(Solution, VolumePerAliquot)
		// the MixTo command is used instead of Mix to specify the plate type (e.g. "greiner384" or "pcrplate_skirted")
		// the four input fields to the MixNamed command represent
		// 1. the platetype as a string: commonly the input to the antha element will actually be an Plate rather than a string so the type field can be accessed with OutPlate.Type
		// 2. well location as a  string e.g. "A1" (in this case leaving it blank "" will leave the well location up to the scheduler),
		// 3. the plate name,
		// 4. the sample or array of samples to be mixed; in the case of an array you'd normally feed this in as samples...
		aliquot := MixNamed(OutPlate.Type, "", "AliquotPlate", aliquotSample)
		aliquots = append(aliquots, aliquot)
	}
	Aliquots = aliquots
}

// Run after controls and a steps block are completed to
// post process any data and provide downstream results
Analysis {
}

// A block of tests to perform to validate that the sample was processed
//correctly. Optionally, destructive tests can be performed to validate
//results on a dipstick basis
Validation {

}
