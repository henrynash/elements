// Example element demonstrating how to perform a BLAST search using the megablast algorithm
protocol Lesson6_BlastSearch

import (
	"fmt"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/sequences"
	biogo "github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/sequences/biogo/ncbi/blast"
	"github.com/antha-lang/antha/antha/AnthaStandardLibrary/Packages/sequences/blast"
	"github.com/antha-lang/antha/antha/anthalib/wtype"
)

// Input parameters for this protocol
Parameters {
	DNA DNASequence
}

// Data which is returned from this protocol; output data
Data {
	Hitssummary string
	ExactHits   []biogo.Hit
	BestHit     biogo.Hit
	Identity    float64
	Coverage    float64
	AnthaSeq    DNASequence
	Warning     error
}

// Physical inputs to this protocol
Inputs{}

// Physical outputs from this protocol
Outputs{}

Requirements {

}

// Actions to perform before protocol Lessonitself
Setup {

}

// Core process of the protocol: steps to be performed for each input
Steps {

	var err error
	var hits []biogo.Hit
	var hitsummary string
	var identity float64
	var coverage float64
	var besthitsummary string

	AnthaSeq = DNA

	// look for orfs
	orf, orftrue := sequences.FindORF(AnthaSeq.Seq)

	if orftrue == true && len(orf.DNASeq) == len(AnthaSeq.Seq) {
		// if open reading frame is detected, we'll perform a blastP search'
		fmt.Println("ORF detected:", "full sequence length: ", len(AnthaSeq.Seq), "ORF length: ", len(orf.DNASeq))
		hits, err = blast.MegaBlastP(orf.ProtSeq)
	} else {
		// otherwise we'll blast the nucleotide sequence
		hits, err = AnthaSeq.Blast()
	}
	if err != nil {
		fmt.Println(err.Error())

	}

	ExactHits, hitsummary, err = blast.AllExactMatches(hits)

	if len(ExactHits) == 0 {
		hitsummary, err = blast.HitSummary(hits, 10, 10)
	}
	BestHit, identity, coverage, besthitsummary, err = blast.FindBestHit(hits)

	//	AllHits = hits
	Hitssummary = hitsummary
	fmt.Println(hitsummary)
	fmt.Println(besthitsummary)
	// Rename Sequence with ID of top blast hit

	if coverage == 100 && identity == 100 {
		AnthaSeq.Nm = BestHit.Id
	}
	Warning = err
	Identity = identity
	Coverage = coverage

}

// Actions to perform after steps block to analyze data
Analysis {

}

Validation {

}
